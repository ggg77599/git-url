#!/bin/bash
set -e

USAGE="usage: git url [remote/branch] [file]"

if [ $# -gt 2 ]; then
    echo "too many parameters. parameter count $#. $USAGE"
    exit 1
fi

remote=""
branch=""
file="$2"
if [ $# -eq 2 ]; then
    if [[ "$1" == *"/"* ]]; then
        remote=${1%%/*}
        branch=${1#*/}
    else
        remote=$1
        branch=$(git rev-parse --abbrev-ref HEAD) # get current branch
    fi

    if [[ "$(git remote)" != *"$remote"* ]]; then
        # FIXME: this place use contains substring, so "ori" will also pass
        echo "no such remote: $remote. $USAGE"
        exit 1
    fi

    if [[ "$(git branch --remote)" != *"$remote/$branch"* ]]; then
        # FIXME: this place use contains substring, so "mas" will also pass
        echo "no such remote branch: $branch. $USAGE"
        exit 1
    fi

    if [ ! -f "$file" ]; then
        echo "no such file: $file. $USAGE"
        exit 1
    fi
elif [ $# -eq 1 ]; then
    if [ -f "$1" ]; then
        remote="origin"
        branch=$(git rev-parse --abbrev-ref HEAD) # get current branch
        file=$1
    elif [[ "$1" == *"/"* ]]; then
        remote=${1%%/*}
        branch=${1#*/}
    else
        remote=$1
        branch=""
    fi

    if [[ "$(git branch --remote)" != *"$remote/$branch"* ]]; then
        # FIXME: this place use contains substring, so "mas" will also pass
        echo "no such remote branch: $branch. $USAGE"
        exit 1
    fi

elif [ $# -eq 0 ]; then
    remote="origin"
fi

remote_url=$(git remote get-url "$remote" | sed 's/\.git$//g')

if [[ "$remote_url" == "git@"* ]]; then
    #echo "start with git@"
    remote_url=$(echo "$remote_url" | sed 's|:|/|g')
    remote_url=$(echo "$remote_url" | sed 's|git@|https://|g')
elif [[ "$remote_url" == "ssh://git@"* ]]; then
    #echo "start with ssh://git@"
    remote_url=$(echo "$remote_url" | sed 's|^ssh://||g')
    remote_url=$(echo "$remote_url" | sed 's|:|/|g')
    remote_url=$(echo "$remote_url" | sed 's|git@|https://|g')
elif [[ "$remote_url" == *"this_is_my_own_special.rule:10022"* ]]; then
    #echo "special rules"
    remote_url=$(echo "$remote_url" | sed 's|10022|10443|g')
    remote_url=$(echo "$remote_url" | sed 's|ssh://git@|https://|g')
fi

if [[ -z $branch && -z "$file" ]]; then
    echo "$remote_url"
elif [ "$file" = "" ]; then
    echo "${remote_url}/tree/${branch}"
else
    relative_file_path=$(git ls-files --full-name "$file")
    echo "${remote_url}/blob/${branch}/${relative_file_path}"
fi
